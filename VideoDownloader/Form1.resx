<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIAAmIAAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAH+1J
        REFUeNrt3Xl0XFedJ/Dvve/VqlKptMuSbK22vMmbLDteskFI0mlCEkigG0gaaJo0O0nHMDNwZoBuGvrM
        GaaHbubA9Ok+zdDdQOhJHJYECA1JCHFiZ8H7JseWrX0traVa3v3NHyUZQ+JYtlVVT9L3c47skxNZqrr1
        ft9337333QcQERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        EREREREREREREREREdFFqbn4IQ8/9zDqtt2Czld/DbE0YABAFnCjKcBSsCwLUMDtVTfxSKLFFwCPnvkp
        HOPAb3sBrdD2k2dQfeOWgIbOUxC9ECNAAYBoI5YZx7ia8hb74KQc9A70IhKO4J2Nb+VRRQs7AL5//Cfo
        6RjDsvoIygqLMDgyWGaUukYB25Rl1RvHqQfgWZi9AAUASW1Zp4zjHNW2fiqZdF70WvZEfDIObWnc2XAL
        jyxamAHw8OnHkXQMwgE/UjFTZPv03Uqp+4yR9WJMSGThdv1f03hKQVt6AMDPHcf5u7FT0T15y8KitMJd
        Dbfy6KKFFQDfO/FDOGJQESzGiDOxzrbsz4uY24xjfIup8F/TiFrDsvQZceSvY2OT/+wJepNaK9xZxxCg
        BRIA/37qx5iKTaF66TJEo9GdWuF/GWM2iVm8hf87DakUlFZRGHwhkZz6umXZSYHGO9gTIBfTs/3Gc32n
        EQ5HEB0ebtZK/a1xWPwXEhEYx0SUVv/N6wu8v2cwqo3j4PvHf8jGIdeaVQ/g+yd+BNu2YYwUeryefzDG
        vEOMYeu9XoMqBW1ZXUbM+/JC+U92nj6D/sEkdt1yHxuHXGdWPYBUykG4MB+213obILex+C8u3RNwKi2l
        vzAWHa0vLi3Blq31bBiavwHg93kRHYgWKqj3GscE2GyzCAFjttke68HJiSn/QP8YHjn+YzYMzb8A2H30
        CdheDzw+70YALYt5tP9yGGMAkXv9Ad8dwZIwklMJfPW5h9kwNL8CACKwi/2AoFVEImyyywqBsLLUrtjQ
        WKO/IA/NdcVsFJpfASAeYOR4r21ZVqMYUYuhUeaKiECMtNge+5NTsSn/yGQcD5/6ERuG5k8AGC1QQdtj
        IGE21+UzxkDE3Ovz++5aUlCGZDyJ7xzezYah+REAEAUFbYkIB/+ukBgp0Jb+bP/E4PpIpABHug7iYeF4
        AM2DAFBQUNCAgN3/Kw2A9KzAGq30F2MTsbKW+i3IP1aBb8o32Tjk7gCYiQBW/1WGgBGIyB/6/L7PGpMM
        J/1x3P/K/fjuq1wpSK4OAJorxjGWGPlzb8D/eQepoh+V/Bwe28bucz9l41BO2GyC7HIcxyuwPmZZnqqU
        cf6qFvUHO9GOR089gZRROHdyBOXVeXjPOm4sQgyABck4jkdp9U7LstZ14dy3JIUfOCmnvbtrarJhTaEA
        wGPtP2ND0e9QSkFrnR5TgkCQhILGHUuv/I7TS17aP9L2ExjHhHwB73ccx3krVwLO7QeqtDIK6py29H7H
        MSeMMZ1KLeANFekqDhdltNZnBXLMwLRb8MSMk4JHxeDAi9tr/uCyfyh7ADkkIhBHNIAaY0wNFKAVh1vp
        4ocMBDEF1Wdpe58Y5/uOY55Udn7UpOJ47NWf4Y76mxkA8zUMIOlPmOgilIEJAqhVStVqrW/zeOyfQ5y/
        ubPhD/Y80vZjPHrqcdzVcNusfyBnAYjmIRGB4zh5juPcobT+9g/PPnlP77kObUSw+8wTDACixRIEqVSq
        AUr9bVVj/d3P7H8ExjF4rO0nDACixRICTsqp1Ep/+aYtf7TdG/BDxWd3KckAIFo4IVAPqIfi47ECJwB8
        7+wvGABEi4UxBmLkLbbf/2a/pTDuzWMAEC2qEBAJaa3ePhZP+QsnhxkARIuJiAGMbPXadrVtXbq853Qd
        gML06raZ/yCiOazumQdvv8FqkfRyknJtWcuV1m2PnPoZ3t5wc2YDQE+vXZ1MpjAaT2AsnkTSMRDmANFc
        1D2UAny2hbDPi7DPA79lAQDM6yzNFzF5YqTJ1vKEc4kd/K8qALRSSBnBq9Ex7O8awImBKPrHJxFPOukB
        CX52RHNCAbC0RsDnQWU4D6vLi9BcUYSKvACUUrjwHh0xoi3bWj4RHbe8QZ+TkQDQSqFzbBI/b+vAy+d6
        MRJLQGa2DeJ6dqK5Jw7G4wn0jU7gYFc/fhEKYkddJa6vW4ICn/d3egNaKa+TTCpxPMhIALzUPYBHDp5C
        5/AY0jXPfYOIMmp6cE0BEAF6Ryew++ApnOiP4u7mBtRGQheGwKw64PaVvIbnOvrw8CsnEY1N8e41olzl
        wXTX/2BXP0anEviTlpVoKMq/rEvvy5oG1ErhUP8w/n1/G4ufyCW0UmgfGsG//eYEesZjl1WXswoAmf4l
        g7E4dh86jaGJGIufyGUhcKp/GI8fP4uEY9IXCrPYvGdWAWBPT/P9ur0Hrw5EWfxErqSw72wPjvRHYenZ
        bSt1yQDwaIXq/AA6xyax71zv6847EpELyl8Bk4kk9pztwXgihbrIHNwLoJSgOhLEC5296B2d4NmfyM0h
        AKCtfxjHB6PYVt+IsOeNx/kvOQvw+JluHB2dwEud/SpxqWVFRJTbAFAKY1MJ7O3sBzZVQsyZqwuAn5/q
        gLfdtgdHJ/LAtX1Erpc0Bsf6oniqcy++d7L96gJgeGQCACwDFWTTErmfCDA0PokP734GE45zdQGQShpA
        RCmPZaWvMNgLIHK7VMpBx0AUVsD3ht/H/QCIFiDBrJYBMACIFqxZTNgxAIgWMQYA0SLGR4MtIjLz58Wu
        DacXeXGpFwOA5nORi0Ag6UEgpaCVgq01PFrD1hZsraGVglIqvc+cCBwxSBmDlHGQNAaOMed3mVFKQSlw
        vwcGALmx4EUEIgKlFPy2B2GfHyXBEKpC+agKhVEaDKE4EEDE50ee7UXAtuHVFmylYACkjIMpx8FkKomx
        RAKD8RgGYxPoGR9Dx/goeibGMRybwEQygZRxMLP1i+KycAYA5bDoAfgtGyV5ITQWFmN1cRmaikpRnx9B
        aSCIkMcLr9awlMb0yf4NnkA8c5ZPMyJIGoMpJ4WReBznJkZxMjqEo0N9ODrQj46xKEbjUzBioKEYBgwA
        ynjhi8BA4Lc9qA5HsKmsEq1LlqK5uAxLgiEEbTu9Q/N0OMz8nRIzi/Vbrx0b0Eohz/Yg5PFiaSiM7RXV
        SDgOook4To0M46W+LuztPodjg30Ynoqd74UwChgANIeMCJQCSvPy0VJRhRuX1mNzWSUqgnnwagsCgZHf
        fs1p6FwQPJB0KJT4AyjzB3FNeSXuXbkOJ6JD+FXnGTzTcQZtQwOIpRLsFTAAaC4K39IaDZFivLmmETfX
        NGBFpAhBywMzXfQpMTl5XTObvodsDzaXLkFLSQXe3bQOe3o68PjpE3ip+xxG41McK2AA0BUVvtJYUVyK
        2xtX4tZljVgWCkMrlbOivxgB4Ey/nrJAEHfVNeGm6jq82N+FR9qO4NcdZzA6FYNSmpcGDAB6w2Ka7r4v
        KyjEHctX4476lVgWCp8PBcfluzHN9AyCto0bK2uxpawKz/d24rvHD+D5znbEkkluKMMAoIsVT9jvx611
        TXjPynVYGSmGmj7jzzczA49+y8Kbq2rQUroET547hX858hscHeg9P1hIDIBFT0SgtcKG8ip8sHkzrq+s
        gd+y4EzP7c/r9wYgJYJ8jxd3N6zClvIqfPvYAew+eRjR2CR7AwyAxc2IIOzz4+1Na/EnqzagOi9/XnT1
        Lz8IBI4AS0Nh7Nq0HVsqqvCN/XtxqK97+nFyDAIGwCIs/vrCYnx0wzW4ZVkDvNNn/YX+nm2l8JbqOiwv
        KMI3Du7Dj9uOIZ5K8pKAAbA4zDwyfeeyejywaTvWFZVmZP7eze/fEUFtfgE+13o9GiLF+McD+zA4yR2n
        GQAL/eAXgcey8LYVa/CJ9ddgSTBvwZ/1L8YRQdD24P2rNmBpKIyvvvgsTkeHGAIMgIVb/AGvF/eu2YQP
        rW1Bvse7aIv/fJtAoAHcuqwBxf4g/nrv0zjU180QyCJuCJKl4g/5fPjIxm346LpW5Hu8fMLS+RBI9wZa
        y5bgr3bchM2VS9k2DICFV/wf27Qd71+1AT5t8wB/HY4I1hSW4Ivb3oytVcvYRgyAhVH8Qa8XH964De9t
        Wgdb6YvcikszIbC8oBD/deuNaFlSzRBgAMzv4vfaNt7XvBn3NjWz+C8jBFZEivDZrTdgVWkFQ4ABME8b
        Vmu8o6kZH1y9CT7LZvFfZgg0F5XiP225DksLChkCDID5xYjg+poGfHTdFuR5PDyArzAEtpVX4ZMtOxAJ
        BOf9smgGwCIq/lUl5Xhw43aUBYIs/qsgIrhtWQPuW7MJHstiH4oB4P4DtigQxMc2bUNTpGhBzPOr3/vK
        ansCsLXGvSvX4c11K2b3rCu6LFwINIcsrfHHqzfgTZW1OTnzz+wBeNFKlat/tKsCsrpQx4gg4vXhI+u2
        oG14ACcH+7lQiAHgPkYE26pr8Z6mdbB09u/j10rhyY4z+Fn7yYveWJPePvwyQwW/vU/BiGBb5TLc07g6
        q70BRwQrI0X4YHMrvvjcf2AyEefNQwwA9xARlOaF8GfNrSj1B3LS9ddQODE8gEeOH8Qbbr51uXUjFxai
        QZ7Hi3saV2f9/RkR3LqsAS90n8Ojxw/yoGMAuIdSCncuX4ut5ZU5ve7XSsHSGnO6+5763TCwc7TttwAI
        2jbet3ojXurtRDtvHJqbY4ZNcHWMCJpKyvCuFWtg5fiA1EplfnONHL5FRwRNkWK8s6kZHsviwccAyC0B
        4LVtvKtpHWpC4dxP+WU6gARQSuf8Lb6tvglrS5dwipUBkOMAEMH6skrcsqzBFXPU2dh4O9edbiOCikAI
        9zQ1w297uDaAAZCj4gfgtz14x4o1KPG7YcGPIBtXIG646hYI3lRdi3XllVwhyADI0UEoBmtKK3B9ZY1r
        1vnrLAzQuWH6zYig2BfAHQ2r4LNt9gIYANnnsWzcVt+EEn9gUV2LumXcXSC4vqoGK4rK2AtgAGSXEUFN
        QRFuqKpx0dlHpafFMlyhWZlpmOVnUBYI4i21jZwOZABku9SA65bWomp6H3/3vK4sXAK4aA9/BeDG6lpU
        hMLsBTAAskNEUBAI4MbqOtjKXc2XPhMunrOhEUFdOILNS6rPP62YGACZPeggWFlchlWFpeefiusK2ah9
        BWitXJMxAsCvbVxXXYsApwQZANlgKY1tS5ahwOt13QG3GB/AbSDYVLIElfkRXgYwADJLRFDgD6C1vAqu
        62pn6djXLnuSn4igPJiH9WVL2ANgAGS6xtKj/w0u3KdOqXTvZDENAqY/E8CnLbSUV8LL+wMYAJk92BSa
        S8pR4PW5cpPPrMyGufAqQyBoLi5DoZ97BzIAMshnWVhbUg5bu7PZVBbm6C3lvod5GwGq8sJYFo7wBiEG
        QGaICML+AFZEil17llHn/1hknw0EIY8HTcWlWeoGMQAW5UFWnpePimAeXDT5d8Hry85efW4tL1trNEaK
        4XFp74wBMN8DQICacAT5Hq9rd6fNylIApdx5lhWgLlyIoMfDh7AwADJz4NeEI/C6eH/6zPcA3Nu9NhBU
        5oWQ7wtw93AGwNyztUZlKOzqG09mbtXN5PGvlYZyYYGJAAVeH4oDQYA9AAbAnB5cAHy2jfJgyOUfZjZu
        BnLvpxSwPSgLhtgDYADM9bEl8Fk2in1+V88zq2zdDOTOIQB4tEZJILgoZ0IYABk+uPweL/K9Pld3LjPd
        A1BIh4xb28BSChF/wHWrFRkAC4DftuG33P0YBbWIpwGB9CBoyOPjU4MYAHMtfQng5jnm9DP7Mlyhanq1
        oUu7AArph4do1v+s8clAs6t/eLSGrbWrxwCyOQh4Nb8nky3os2woKK4FYADMLUvpjE4ByiWKSn6vdH4/
        h7L1SDIBkBJB6ip+nwIy9hQlWy/GXREYAPPeU53teLbzzPmQMSK/XXIsgJHfbnol0/9/JgVk+qt7Ygwp
        YzJWABoKT7a34fTI8BXvhmRrjXtWrEUrn+zDAJhPHDHTB6zCXHditVKoDoXxm75uHOjruuKehprZGTiD
        Dvd141Bf1+X/Q0m32u3LV6MxXJixufqk4e6Al3XssQlmVVlIGpM+u2agvowIVkaK8F+23oD6SAkUFCyl
        L/srG6sUtbqy16aUwrbqWjzUsgNFPn/GrtETTooLgRgAc58AcSeFhHEy9hscEbSWLcFftO5AcTBvQXWP
        jQgaC0vw6c07UZ2Xn7HxChFgMpXkDsEMgLk3lUoi7jgZ/R0igpuXNuDDG65Bnse7IHa3MSIoCebhwc07
        sa64LKODlQaC8WSCuwIxAOaWAjCVTGI0Ec/oCPPMCMO7lq/Be9ZuhO3iOw9n9X5EEPR48eGN1+BN1bUZ
        n6lwRDAcm+QUIANgrhMgfQkwFI9lfJWZIL312IfWtOAPG1fN3+IHYGmNP1q9Ae9sXJOV9QlJYzAwNcmb
        ARkAc39wxVMp9EyOZ2WO2Ygg7PXhgY3bsKO6bn6OB4jgLXUrcP/aFviy0ZNRCrFUEn2TE9wVjAEw91LG
        oGt8LGsLbowIKoMhfKZ1J9aUVsyrEDAi2LikGg9u2o4inz8rr10BGEnEMRSbBG8HZADMORHB2ZEoEo7J
        2uHliGBlpBif3nIdqufJjrdGBLWRInx687WozS/IWmBqKHRNjGM0HmMPgAEw95QC2seiGEvGs7onniOC
        beVVeGDzThQG3L3vvYigMBDEp1p2YFNpRdaKP/0BAadHhzGZTPJ2YAZAJo4vhd7xMfRMjme90UQEt9U0
        4v71W+H3eFwZAgKBz/bgQ+u34JZlDVl/jSljcHJ4ACnjuK5tGAALIQCUwmg8hhPRoazfby5Id3Hf3bQW
        f7x6Ayyt3fdgUqVw98pmvHtFMzSyu2mIgsJ4MoHjQwOcAWAAZE7ccXBwoBcpk/0nAwgEfsvGn6/djFsb
        VsJNR7oRwQ01jfjIui0I2HbW5+G1AjomxnBuNOrqTVsZAPOcguDgQA9GEvGc7DpjRFDo8+PBTduxtbLG
        FYOCRgTryirxUMsOlPoDOXlNSikcGuzD8NQkdwNiAGQyABTaR4bRNjKMXN117ohgaV4+PtN6HZqKy3Ia
        AkYE1eEIdrXuRGO4KLuDfuc/k3TP7MXeTiQcXv8zADJ5sCmF0akY9vV25nS5qSOCtUUl+HTrdViSX5CT
        EBARFPj9+ETLdmwtr7ri/QHm4jPpmRzH/r5ujv0zALJRfAZ7us5iNJHI6XSTI4JrK5fiUy3bUeAPZHXU
        XSDw2jY+0NyKt9Ysz+mshFYKrwz0oHtshN1/BkA2Gkzh+GAfjgz3Z2xbq1kXoghur12BD65rhc/O3jPx
        FBTuWL4G961an94nMUfvXwGYSqXwdMcZxFJJ9gAYAFk46JRCdCqGX547jZTk9jnBgvRehfeuXI97Vq6D
        Vpn/OI0Idi6tw8c3bEWe7cnpGIRWCq+ORfFidwe4EyADIKue6TiNjomxnE87CQRB28ZH17XiproVGe2O
        GxGsKinHrs07URHI/aYlAuCXHafROz7K7j8DIIuNphTOjgzjqY4zrjjvGBEU+wN4qGUHNlcuzUhhGhFU
        hMLY1XotVkaKczLi//ufQe/kBJ4808bNRRkA2Zd0HDx++jgGpmKuWHziiKA2FMZnWq9DY1HJnBaFiCDf
        68PHN23HjiVLc178QHoc4umudpwY7OfZnwGQgwNQKRzu78FTne2uufnEEcH64jLsar0O5aH8OQkBAeCx
        LNy3tgV31jfBDTtuaqUwGI/hsbajSDgc/GMA5CIAkN4k5P+dPISBqUnXLEF1RHBDVQ0+vmk78ufoaca3
        Na7CB1ZvgMcl9yAoAP9x7lUc6OuCUjyEGQC5ajylcKC3G0+cbXPXCxPBXfUr8YHmzfBexdp8I4Jrqmrw
        qQ3bEPb6XHGtrZVC9+QEHj5xCPFUimd/BkBuJZwUHj52EO1jo67pBQjSzzJ83+oNuGvF2iuaIjMiWF5U
        il2bd6IqL+SK634gfQXy2OnjONzXzRt/GAAuaEClcGKwD987ecg1RTJTwHm2B59YvxU31DZe1qWAEUFp
        Xgh/sXknmotKXfO+LKVwNDqA7x87kJM7MhkA9LpEBLtPHMbzPZ05Xx34mkIOBLGrZSc2VFTNqgsvIsjz
        ePGRjdfgxqoa1xS/AjCZSuGfj7yCcyPDPPszANxDKYWByXH8w8EX0eeSacEZjggawhF8pvU61BUWv2EI
        zGzl/e41G3FPw2rXtfHj7W148vQJHnAMABc2pFLY29WOfzm2P6NP6L3SEGgprcBDm69FSTD0BiEguKV+
        Jf5szSZ4XfRQEkspHIsO4h8P7sNEIsF5fwaAOznG4LtH9+MXFzzm200hcFN1LT62aRtCXt9rxgSMCFoq
        luKBTdtQmKWtvGd1gCqFaDyOr+/fi7ahAXb9GQDupZTCcGwSf//yHhyNDrpqPGDG3Q2rcN/aFnguOMMb
        EdQVFmNX67WoCYVddd2fMgbfOrYfvzxzkmd+BsA8aFClcGywD199+Tn0xtyzQAhIX+N7LQt/umYjbl+e
        flyXEUFRIA8PtOzAppJyV81kKKXwo/aT+Pbhl5F0HM75MwDmTwj86uyr+Pv9L2A8mXBVCBgR5Hu8+NTG
        a3Dt0nr4bQ/uX78FNy+td9VNNZZSeK6nA1976TmMTMV49s8Qm02QoUIzBo8eP4RCfwAfad4Mr7Zd89Ra
        I4KKQB4e2rwDL/TU4u6GVVBQrnl9llLYP9iHr+x9Bh3c6ZcBMB8ppZBwUvjWoZcQtD34wOoNsJXlmiJz
        RLCioAgrCooAwFXFfyw6iC+98DSODfSy+DOMlwAZDoFYIoFv7n8B//fYASSN46rHVskFX24p/uPRIXzx
        +V/ilZ4OFn8WsAeQhRCYiMfx9Zf3IGEM3rdqPQKWzU0sXqf4Dw7140svPIWXuln8DICFFgKJOL7xyvMY
        T8Rx/9rNCHu9DAGkp/qUUni+twtf3vs0jvT3sPgZAAszBKaSCXzr4IsYnJrEJzdcg8qge+6yywWtFBwR
        /LS9Df/zpV+jPTrE4mcALOwQSBqD3ccPoWd8HA+2bMf66af7LLYYsJTCWDKJfztxEP908EUMTU6w+BkA
        iyAEpv9+ruM0uidG8eH1W3FbTSO8lrUoLgkU0mf+02Mj+N8H9uGJU0eRSKVY/AyAxUUrhdPDg/jLPb/A
        wcFevH/1RizNy1/QvQFLKcSNg192tOOb+/ficH9POhRY/AyAxRoC4/Ep/Ouhl7G/rxt/2tyCG6tqEbDs
        BTU2oJSCBnBmbATfPrYfj508ghGX3TbNAKCcFQcAHOjtwueiQ7i5bgXeu3I9VhcWnx8km7fvDeknFw0n
        pvDTs6fwr0d+g+ODfRARFj8DgC400xt45NgBvNB1Fm9rXI07G1aiNr8ACphXQTBT+OOpBPb0dOI7xw5g
        b9dZTKWS0Eqxy88AoNctnOnC6BiN4huv7MHPzpzA7Q2rcGtNI2ryC2Ap5eoxAq0UNBRGk3Hs6+vGIycP
        47nOdozFY1BK86zPAKDZFhIAtA0N4GvDv8buk0fwppoG3FLTiKZIcfqhnBBXzBrMnO0dMeiZnMCeng48
        fvo4Xu7pxFh8anrUnyvOGQB0RUEgEJyODuKfRobwg7Yj2FRehRuX1mNzeSWWBEPw6fQNRtnsGcyc6Q0E
        o4k4jkeH8EznGfyq4wxODQ9gKpWCBnjGZwDQXBUcAAxMjOMnrx7DU+2nUBkuwMaySmypWIrmklJUBvOR
        5/H8zmWCzEEozCzV1VCAAhKOg4GpGE6NDOPF3i7s7TmHE0P9iE5NQiT9vW7cCYkYAPOeUgoWFBLGwenh
        Qbw6PIAftR1BcTCEhkgR1pSUo6mwFPUFEZQFggh5vPBpC5bSmKlJkde/9VdNF7gCzodH0hjEUikMJ6bQ
        MT6Kk9EhHB3sxdHBfnSOjWAsEYcRA430wB7rngFA2QgCzAwYKqSMQc/YCLpGo3j23Gn4bBthnx/FgTxU
        hsKoCuWjNBhCsT+IiM+PkMeLgG3Bqy1YWp8v9CnHwWQqibFEHINTMQzGJtAzMYbO8TH0TIwhOhXDZCKB
        lHHOF7uCgsXrewYA5TgQLuh2JxwHAxPj6J8Yx9H+HkClB+EspeCxLNhaw1Ya+oJegRGBIwaOMUg6Bknj
        pC8jRKa/54KC1yx4BgC5NwzSiXD+7xlGBFOpFAB5/R1A1Pk/zq/XZ5+eAUALLRxmLvSJwC3BiBgARMQA
        ICIGABExAIiIAUBEDAAiYgAQEQOAiBgARMQAICIGABExAIiIAUBEDAAiYgAQEQOAiBgARMQAICIGABEx
        AIhoLs1q69dZBIDMfBm2KdF8IFAiRulLb+1+6QBIP4AmDqgBNizRfKAgxgz84AtfS8klniB9yQAwYjDc
        fXhcjOxjwxLNi/qfgFL77v4f/xlJiV9dANy2/AYUVa0XMfIolDrFh0oQubn4FQD8CpJ4VpwktLLe8Nut
        S/28Q6vz4TEejJ+b7PUVeieVUjsBFWBLE7mw+LU6akQ+rQsjx5y2sxj/8v95438ym59b8KVdUEqgTNID
        r/9dSqkHAVkLEQ+fM0XkiuKfBORZEfnL7QWhZ58eGIadTCH6+b+7+gAAgMKv7AJEYDU3wDncXqeUvAki
        62Fb+QwBohwREXGcfij9gjjJZ3Re/kBifBTasjD6mf9+6dy4nN9V9JVdEMcAHg9saExMDGtb+y0YLicg
        ygWlDUY6f5MqXnGNmFQSzugwdDAP0c99bXb//kp+af7fPABHA56UgoIFCHsARDkJACUwJonJWAK2bSF2
        iS4/ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERFdhv8PdCHXWk7769AAAAAASUVORK5CYII=
</value>
  </data>
</root>